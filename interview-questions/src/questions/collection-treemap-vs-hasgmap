Basis	HashMap	TreeMap
Definition	
Java HashMap is a hashtable based implementation of Map interface.	
Java TreeMap is a Tree structure-based implementation of Map interface.'

Interface 
Implements	
HashMap implements Map, Cloneable, and Serializable interface.	
TreeMap implements NavigableMap, Cloneable, and Serializable interface.

Null Keys/ Values	
HashMap allows a single null key and multiple null values.	
TreeMap does not allow null keys but can have multiple null values.

Homogeneous/ Heterogeneous	
HashMap allows heterogeneous elements because it does not perform sorting on keys.	
TreeMap allows homogeneous values as a key because of sorting.

Performance	
HashMap is faster than TreeMap because it provides constant-time performance that is O(1) for the basic operations like get() and put().	
TreeMap is slow in comparison to HashMap because it provides the performance of O(log(n)) for most operations like add(), remove() and contains().

Data Structure	
The HashMap class uses the hash table.	
TreeMap internally uses a Red-Black tree, which is a self-balancing Binary Search Tree.

Comparison Method	
It uses equals() method of the Object class to compare keys. 
The equals() method of Map class overrides it.	It uses the compareTo() method to compare keys.

Functionality
HashMap class contains only basic functions like get(), put(), KeySet(), etc. .	
TreeMap class is rich in functionality, because it contains functions like: tailMap(), firstKey(), lastKey(), pollFirstEntry(), pollLastEntry().

Order of elements	
HashMap does not maintain any order.	
The elements are sorted in natural order (ascending).

Uses	
The HashMap should be used when we do not require key-value pair in sorted order.	
The TreeMap should be used when we require key-value pair in sorted (ascending) order.