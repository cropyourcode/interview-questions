Dependency Injection (DI) is a design pattern that removes the dependency from the programming code so that it can be easy to manage and test
the application. Dependency Injection makes our programming code loosely coupled.

2 types.
1) Constructor-based dependency injection:
Constructor-based DI is accomplished when the container invokes a class constructor with a number of arguments, each representing a dependency
on the other class.

2) Setter-based dependency injection:
Setter-based DI is accomplished by the container calling setter methods on your beans after invoking a no-argument constructor or no-argument 
static factory method to instantiate your bean.
